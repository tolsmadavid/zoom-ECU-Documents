/**
  @page OPAMP_PGA_ExternalBias OPAMP example

  @verbatim
  ******************************************************************************
  * @file    Examples/OPAMP/OPAMP_PGA_ExternalBias/readme.txt 
  * @author  MCD Application Team
  * @brief   Description of the OPAMP_PGA_ExternalBias example.
  ******************************************************************************
  *
  * Copyright (c) 2019 STMicroelectronics. All rights reserved.
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                       opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  @endverbatim

@par Example Brief 

This example shows how to use the built-in PGA mode (OPAMP programmable gain) with
positive or negative gain, and bias.

@par Theory

Wether the gain is negative or positive depends on the way the signals are connected
to the OPAMP inverting & non inverting inputs.

Considering Gp and Gm as the positive and negative gains, the OPAMP behavior is described by:
OPAMP OUT = Gp * Vinp - Gm * Vinm
(Vinp = signal on non inverting input of the OPAMP, Vinm = signal on inverting input of the OPAMP)

@par Example Description

This example is configuring OPAMP1 as follow:
- Inverting input: PA3 (pin 42 on connector CN6)
- Non inverting input: PA7 (pin 37 on connector CN6)
- Output: PA2 (pin 43 on connector CN6)
- Gain: Gp=2 / Gm=1 or Gp=4 / Gm=3 (User can change from one to the other using User push-button)

This example also provides signals to connect to the OPAMP inputs:
- A sine wave generated by DAC1 (PA4 - pin 41 on connector CN6)
- A bias generated by potentiometer RV2 (pin 1 - Jumper JP5)

Positive gain configuration:
- Sine wave (PA4 - pin 41 on connector CN6) is connected to
OPAMP's non inverting input (PA7 - pin 37 on connector CN6)
- Bias (pin 1 - Jumper JP5) is connected to
OPAMP's inverting input (PA3 - pin 42 on connector CN6)
- OPAMP output signal is:
  OPAMP OUT = 2 * Sine Wave - 1 * Bias   (or 4 * Sine Wave - 3 * Bias)

Negative gain configuration:
- Bias (pin 1 - Jumper JP5) is connected to
OPAMP's non inverting input (PA7 - pin 37 on connector CN6)
- Sine wave (PA4 - pin 41 on connector CN6) is connected to
OPAMP's inverting input (PA3 - pin 42 on connector CN6)
- OPAMP output signal is:
  OPAMP OUT = 2 * Bias - 1 * Sine Wave   (or 4 * Bias - 3 * Sine Wave)

- Connection needed:
      - Connect an oscilloscope to each OPAMP pin in order to observe this example behavior:
          PA3 (pin 42 on connector CN6)
          PA7 (pin 37 on connector CN6)
          PA2 (pin 43 on connector CN6)
      - Connect sine wave and bias to the OPAMP inputs and make the bias vary to observe OPAMP behavior evolution.
      - Press User push-button button to switch between gains.
      - Connect jumper JP5 on 2-3 position (LDR)

STM32G474E-EVAL Rev B board LED is be used to monitor the program execution status:
 - Normal operation: LED1 is turned-on
 - Error: In case of error, LED1 is toggling at a frequency of 1Hz.

@par Keywords

Analog, OPAMP, PGA, Bias

@par Directory contents 

  - OPAMP/OPAMP_PGA_ExternalBias/Inc/stm32g474e_eval_conf.h     BSP configuration file
  - OPAMP/OPAMP_PGA_ExternalBias/Inc/stm32g4xx_hal_conf.h    HAL configuration file
  - OPAMP/OPAMP_PGA_ExternalBias/Inc/stm32g4xx_it.h          Interrupt handlers header file
  - OPAMP/OPAMP_PGA_ExternalBias/Inc/main.h                  Header for main.c module  
  - OPAMP/OPAMP_PGA_ExternalBias/Src/stm32g4xx_it.c          Interrupt handlers
  - OPAMP/OPAMP_PGA_ExternalBias/Src/main.c                  Main program
  - OPAMP/OPAMP_PGA_ExternalBias/Src/stm32g4xx_hal_msp.c     HAL MSP file
  - OPAMP/OPAMP_PGA_ExternalBias/Src/system_stm32g4xx.c      STM32G4xx system source file

@par Hardware and Software environment  
  
  - This example runs on STM32G474xx devices.
    
  - This example has been tested with STM32G474E-EVAL Rev B board and can be
    easily tailored to any other supported device and development board.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
  
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

