/**
  @page OPAMP_Calibration OPAMP example

  @verbatim
  ******************************************************************************
  * @file    Examples/OPAMP/OPAMP_Calibration/readme.txt 
  * @author  MCD Application Team
  * @brief   Description of the OPAMP_Calibration example.
  ******************************************************************************
  *
  * Copyright (c) 2019 STMicroelectronics. All rights reserved.
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                       opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example shows how to calibrate the OPAMP.

On OPAMP1, this example shows how to 
- Get factory calibration (trimming) settings.
- Enable/disable OPAMP
- Calibrate OPAMP peripheral before and after use of OPAMP.
  Hence changes can be monitored (versus factory settings or in case of 
  temperature impact for instance).

- Connect an oscilloscope to DAC_CHANNEL_2 output (PA5 - pin 40 on connector CN6) to display the sine wave signal
  generated by the DAC. 
- Connect an oscilloscope to OPAMP1 output (PA2 - pin 43 on connector CN6) 
  -> to display the OPAMP buffered sine wave signal.
  -> Monitor enabling/disabling of OPAMP.
- Connect DAC_CHANNEL_1 output (PA5 - pin 40 on connector CN6) to OPAMP1 non-inverting input (PA3 - pin 42 on connector CN6).
- Push the Key Push button (connected to PC.13 pin) to switch from one step to the 
next one.
- Key push button steps are:
  -> 1st Push: 
     + Factory trimming retrieved 
     + User trimming set according to self calibration (1st run)
     + Factory trimming and user trimming are compared
       - If The LED1 blinks rapidly: Calibrated trimming are different from Factory Trimming
       - ................. slowly : Calibrated trimming same as Factory Trimming 
  -> 2nd Push: 
     + OPAMP start
     + Use of previously calibrated user Trimming values
  -> 3rd Push: 
     + change OPAMP setting on the fly (dummy change, without application purpose in this example: change non-inverting input source)
  -> 4th Push: 
     + OPAMP stopped    
  -> 5th Push: 
     + Self calibration (2nd run)
     + results compare to 1st run.
       - If The LED1 blinks rapidly: New calibrated trimming are different from ones calibrated before run
       - ................. slowly : New calibrated trimming are same as ones calibrated before run 
  -> 6th Push: end of test

Note: In case of error, LED1 is toggling twice at a frequency of 1Hz.

For debug: variables to monitor with debugger watch window:
 - "UserButtonPressState": represents the number of button press


@par Directory contents 

  - OPAMP/OPAMP_Calibration/Inc/stm32g474e_eval_conf.h     BSP configuration file
  - OPAMP/OPAMP_Calibration/Inc/stm32g4xx_hal_conf.h    HAL configuration file
  - OPAMP/OPAMP_Calibration/Inc/stm32g4xx_it.h          Interrupt handlers header file
  - OPAMP/OPAMP_Calibration/Inc/main.h                  Header for main.c module  
  - OPAMP/OPAMP_Calibration/Src/stm32g4xx_it.c          Interrupt handlers
  - OPAMP/OPAMP_Calibration/Src/main.c                  Main program
  - OPAMP/OPAMP_Calibration/Src/stm32g4xx_hal_msp.c     HAL MSP file
  - OPAMP/OPAMP_Calibration/Src/system_stm32g4xx.c      STM32G4xx system source file

@par Hardware and Software environment  
  
  - This example runs on STM32G474xx devices.
    
  - This example has been tested with STM32G474E-EVAL Rev B board and can be
    easily tailored to any other supported device and development board.

  - STM32G474E-EVAL Rev B Set-up
    - Connect an oscilloscope to pin 40 on connector CN6 to display DAC_CHANNEL_2 output waveform.
    - Connect an oscilloscope to pin 43 on connector CN6 to display OPAMP1 output waveform.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
  
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

